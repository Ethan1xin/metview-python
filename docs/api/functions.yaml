- abs:
    category:
      fieldset: Absolute value
    desc: Computes the absolute value
    type: script
    group:
      - maths
- accumulate:
    category:
      fieldset: Adds up the values in a given field
    desc: Adds up the values per field in a fieldset
    type: script
    group:
      - stats
- acos:
    category:
      fieldset: Arc cosine
    desc: Computes the arc cosine
    type: script
    group:
      - maths
- addmonths:
    category:
      date: Adds months to a date
    desc: Adds months to a date
    type: script
    group:
      - date
- annotationview:
    category: {}
    desc: Creates an annotation view
    type: icon
    title: Annotation View
    group:
      - view
- any:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- append:
    category:
      io: 'Writes/appends the given data to file. args: (filehandler, any)'
    desc: 'Writes/appends the given data to file. args: (filehandler, any)'
    type: script
    exclude: True
- arguments:
    category:
      info: Returns the list of the calling arguments of the current function
    desc: Returns the list of the calling arguments of the current function
    type: script
    exclude: True
- ascii:
    category:
      string: Returns the corresponding ASCII character
    desc: Returns the corresponding ASCII character
    type: script
    exclude: True
- asin:
    category:
      fieldset: Computes the arc sine
    desc: Computes the arc sine
    type: script
    group:
      - maths
- atan:
    category:
      fieldset: Arc tangent
    desc: Computes the arc tangent
    type: script
    group:
      - maths
- atan2:
    category:
      fieldset: Arc tangent of 2 variables
    desc: Computes the arc tangent of 2 variables
    type: script
    group:
      - maths
- attributes:
    category:
      netcdf: Returns the attributes of the current NetCDF variable
    desc: Returns the attributes of the current NetCDF variable
    type: script
    group:
      - netcdf
- average:
    category:
      fieldset: Averages the values in a given field
    desc: Computes the average per field in a fieldset
    type: script
    group: 
      - stats
- average_ew:
    category:
      fieldset: Returns the zonal averages as a list (or list of lists) of numbers.
    desc: Returns the zonal averages as a list (or list of lists) of numbers.
    type: script
    group:
      - stats
- average_ns:
    category:
      fieldset: Returns the meridional averages as a list (or list of lists) of numbers.
    desc: Returns the meridional averages as a list (or list of lists) of numbers.
    type: script
    group:
      - stats
- averageview:
    category: {}
    desc: ''
    type: icon
    exclude: True
    group:
      - view
- base_date:
    category:
      fieldset: Returns the base date(s) of a given fieldset
    desc: Returns the base date(s) of a given fieldset
    type: script
    group:
      - grib
- bearing:
    category:
      fieldset: Computes the bearings for all the gridpoints with respect to a reference
        point
    desc: Computes the bearings for all the gridpoints with respect to a reference
      point
    type: script
    group:
      - geo
- binning:
    category: {}
    desc: Defines 2D binning for scatterplots
    type: icon
    group:
      - plot
- bitmap:
    category:
      fieldset: Apply bitmap of 2nd fieldset to 1st fieldset
      vector: Converts numbers to missing values in a vector
    desc: Converts numbers to missing values in a vector
    type: script
    group:
      - mask
- bufr_picker:
    category: {}
    desc: Filters BUFR data with complex structure
    type: icon
    pix: BUFRPICKER
    group:
      - bufr
      - filter
- cartesianview:
    category: {}
    desc: Creates a Cartesian view
    type: icon
    title: Cartesian View
    group:
      - view
- checkbox:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- cleanfile:
    category: {}
    desc: Removes unwanted header padding from GRIB and BUFR
    type: icon
    title: Clean File
    group:
      - filter
- colour:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- columns:
    category:
      geopoints: Returns a list of column names for a geopoints variable
      odb: Returns the list of columns from the given ODB.
    desc: Returns the list of columns from the given ODB.
    type: script
    group:
      - geopoints
- compute:
    category: {}
    desc: ''
    exclude: True
    type: icon
- corr_a:
    category:
      fieldset: Computes the area-weighted correlation for each field in a fieldset
    desc: Computes the area-weighted correlation for each field in a fieldset
    type: script
    group:
      - stats
- cos:
    category:
      fieldset: Cosine
    desc: Computes the cosine
    type: script
    group:
      - maths
- coslat:
    category:
      fieldset: Generates a field with the cosine of the gridpoint latitudes
    desc: Generates a field with the cosine of the gridpoint latitudes
    type: script
    group:
      - geo
- count:
    category:
      fieldset: Returns the number of fields in a variable
    desc: Returns the number of fields in a variable
    type: script
- covar:
    category:
      fieldset: Returns the covariance of all two fieldsets
    desc: Returns the covariance of all two fieldsets
    type: script
    group:
      - stats
- covar_a:
    category:
      fieldset: Computes the area-weighted covariance for each field in a fieldset
    desc: Computes the area-weighted covariance for each field in a fieldset
    type: script
    group:
      - stats
- create_geo:
    category:
      geopoints: Creates a new set of geopoints
    desc: Creates a new set of geopoints
    type: script
    group:
      - geopoints
- create_geo_set:
    category:
      geopointset: Creates a new geopoints_set
    desc: Creates a new geopoints set
    type: script
    group:
      - geopoints
- cross_sect:
    category: {}
    desc: ''
    type: icon
    exclude: True
    group:
      - vertical
- datainfo:
    category:
      fieldset: Returns information on missing values in fieldsets
    desc: Returns information on missing values in a fieldset
    type: script
    group:
      - grib
- date:
    category:
      date: Creates a date from a number or a string
    desc: Creates a date from a number or a string
    type: script
    exclude: True
- dates:
    category:
      geopoints: Returns a list/vector of dates from the given geopoints.
    desc: Returns a list/vector of dates from the given geopoints.
    type: script
    group:
      - geopoints
- day:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- db_info:
    category:
      geopoints: Returns a string of the database from the given geopoints.
    desc: Returns a string of the database from the given geopoints.
    type: script
    group:
      - geopoints
- definition:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- describe:
    category:
      info: Describes available function
    desc: Describes available function
    type: script
- dictionary:
    category:
      info: Returns the list of all the documented functions
    desc: Returns the list of all the documented functions
    type: script
- dimension_names:
    category:
      netcdf: Returns a list of the netcdf's dimension names.
    desc: Returns a list of the netcdf's dimension names.
    type: script
    group:
      - netcdf
- dimensions:
    category:
      netcdf: Returns a list of the netcdf's dimensions.
    desc: Returns a list of the netcdf's dimensions.
    type: script
    group:
      - netcdf
- direction:
    category:
      fieldset: Computes meteorological wind direction using U and V wind components
    desc: Computes meteorological wind direction using U and V wind components
    type: script
    group:
      - wind
- distance:
    category:
      fieldset: Computes the distances of all the gridpoints from a point
    desc: Computes the distances of all the gridpoints from a point
    type: script
    group:
      - geo
- div:
    category: {}
    desc: Computes the integer part of a divison
    type: script
    group:
      - maths
- divrot:
    category: {}
    desc: Computes the rotational wind from a vorticity fieldset
    title: Rotational or Divergent Wind
    type: icon
    family: divrot
    group:
      - wind
- divrot_mir:
    category: {}
    desc: ''
    exclude: True
    type: icon
- divwind:
    category: {}
    desc: Computes the divergent wind from a divergence fieldset
    title: Rotational or Divergent Wind
    type: icon
    pix: DIVROT
    group:
      - wind
- divwind_mir:
    category: {}
    desc: ''
    type: icon
    exclude: True
- dow:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- download:
    category: {}
    desc: Downloads files from a given URL
    type: icon
    title: Download from URL
- drawing_priority:
    category: {}
    desc: ''
    type: icon
    exclude: True
- dtype:
    category:
      vector: Returns a string describing the vector's internal storage type
    desc: Returns a string describing the vector's internal storage type
    type: script
- duplicate:
    category:
      fieldset: Duplicates a GRIB field N times
    desc: Duplicates a field N times
    type: script
    group:
      - grib
- eccharts:
    category: {}
    desc: Retrieves and plots ecCharts layers
    type: icon
    group:
      - plot
- ecfs:
    category: {}
    desc: Retrieves data from ECFS
    type: icon
    group:
      - retrieve
- eps_output:
    category: {}
    desc: Defines the EPS (Encapsulated PostScript) output format
    type: icon
    standard: False
    group:
      - output
- epscairo_output:
    category: {}
    desc: Defines the EPS output format using the Cairo driver
    type: icon
    standard: False
    group:
      - output
- eqpott_m:
    category: {}
    desc: Computes the equivalent potential temperature on model levels
    title: Potential Temperature
    type: icon
    pix: POTTF
    group:
      - thermo
- eqpott_p:
    category: {}
    desc: Computes the equivalent potential temperature on pressure levels
    title: Potential Temperature
    type: icon
    pix: POTTF
    group:
      - thermo
- examine:
    category:
      ui: Actives an interactive data examiner window on the given data
    desc: Actives an interactive data examiner window on the given data
    type: script
    group:
      - ui
- exist:
    category:
      io: 'Determines whether the given file exists. Returns 1 or 0. args: (string)'
    desc: 'Determines whether the given file exists. Returns 1 or 0. args: (string)'
    type: script
    exclude: True
- exp:
    category:
      fieldset: Exponential
    desc: Computes the exponential
    type: script
    group:
      - maths
- fail:
    category:
      system: Prints all its arguments and stop in error
    desc: Prints all its arguments and stop in error
    type: script
    exclude: True
- fetch:
    category:
      system: 'Returns the item stored in the named cache (or nil). args: (string)'
    desc: 'Returns the item stored in the named cache (or nil). args: (string)'
    type: script
    exclude: True
- file:
    category:
      io: 'Returns a file handler for the specified filename. args: (string)'
    desc: 'Returns a file handler for the specified filename. args: (string)'
    type: script
    exclude: True
- filetype:
    category:
      fieldset: 'Returns the type of the given file. args: (string)'
    desc: 'Returns the type of the given file. args: (string)'
    type: script
- fill_missing_values_ew:
    category:
      fieldset: Fills missing values along the horizontal line
    desc: Fills missing values along the horizontal line
    type: script
    group:
      - grib
- filter:
    category:
      vector: Filters a vector according to the values of a second vector
    desc: Filters a vector according to the values of a second vector
    type: script
    exclude: True
    group:
      - filter
- find:
    category:
      fieldset: Finds values in field
      list: Find where an item occurs in a list
      vector: Find where a number occurs in a vector
    desc: Find locations of values in a fieldset
    type: script
    group:
      - grib
- first_derivative_x:
    category:
      fieldset: Computes first West-East derivative of fields
    desc: Computes first West-East derivative of a fieldset
    type: script
    group:
      - calculus
- first_derivative_y:
    category:
      fieldset: Computes first South-North derivative of fields
    desc: Computes first South-North derivative of a fieldset
    type: script
    group:
      - calculus
- flexpart_convert_trajectory:
    category:
      flexpart: Converts raw FLEXPART trajectory output to CSV
    desc: Converts raw FLEXPART trajectory output to CSV
    type: script
    group: 
      - flex
- flexpart_prepare:
    category: {}
    desc: Retrieves and prepares data for a FLEXPART simulation
    type: icon
    group:
      - retrieve
      - flex
- flexpart_release:
    category: {}
    desc: Defines a FLEXPART release
    type: icon
    group:
      - flex
- flexpart_run:
    category: {}
    desc: Performs a FLEXPART simulation
    type: icon
    group:
      - flex
- flextra_group_get:
    category:
      flextra: Returns a list of available meta data keys for the given table
    desc: Returns data for a FLEXTRA result group
    type: script
    group: 
      - flex
- flextra_prepare:
    category: {}
    desc: Retrieves and prepares data for a FLEXTRA simulation
    type: icon
    group:
      - retrieve
- flextra_run:
    category: {}
    desc: Performs a FLEXTRA simulation
    type: icon
    group:
      - flex
- flextra_tr_get:
    category:
      flextra: Returns a list of available meta data keys for the given table
    desc: Returns data for an individual FLEXTRA trajectory
    type: script
    group:
      - flex
- flextra_visualiser:
    category: {}
    desc: Defines visualisation for FLEXTRA results
    type: icon
    group:
      - flex
- float:
    category:
      fieldset: Converts int GRIB to float GRIB
    desc: Converts int GRIB to float GRIB
    type: script
    group:
      - grib
- frequencies:
    category:
      fieldset: Computes frequencies of a field
    desc: Computes frequencies of a field
    type: script
    group:
      - stats
- geo_to_grib:
    category: {}
    desc: Converts geopoints data to GRIB
    type: icon
    title: Geopoints To Grib
    group:
      - conversion
- geo_to_kml:
    category: {}
    desc: Converts geopoints data to KML
    type: icon
    title: Geopoints To KML
    pix: GEO_TO_KML
    group:
      - conversion
- geosort:
    category:
      geopoints: Sorts the geopoints North to South and West to East
    desc: Sorts the geopoints North to South and West to East
    type: script
    group:
      - geo
- geoview:
    category: {}
    desc: Creates a map view
    type: icon
    title: Geographical View
    group:
      - view
- getenv:
    category:
      unix: Return the value of a shell variable
    desc: Return the value of a shell variable
    type: script
    exclude: True
- gfind:
    category:
      fieldset: Finds values in field and returns the result as geopoints
    desc: Finds values in field and returns the result as geopoints
    type: script
    group:
      - grib
- global_attributes:
    category:
      netcdf: Returns a definition variable holding the netcdf's global metadata.
    desc: Returns a definition variable holding the netcdf's global metadata.
    type: script
    group:
      - netcdf
- globe_output:
    category: {}
    desc: ''
    type: icon
    exclude: hidden
    group:
      - output
- gradient:
    category:
      fieldset: Computes horizontal gradient of fields
    desc: Computes horizontal gradient of a fieldset
    type: script
    group:
      - calculus
- grib_get:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_get_double:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_get_double_array:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_get_long:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_get_long_array:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_get_string:
    category:
      fieldset: Reads GRIB headers using ecCodes keys
    desc: Reads GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_set:
    category:
      fieldset: Writes GRIB headers using ecCodes keys
    desc: Writes GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_set_double:
    category:
      fieldset: Writes GRIB headers using ecCodes keys
    desc: Writes GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_set_long:
    category:
      fieldset: Writes GRIB headers using ecCodes keys
    desc: Writes GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_set_string:
    category:
      fieldset: Writes GRIB headers using ecCodes keys
    desc: Writes GRIB headers using ecCodes keys
    type: script
    group:
      - grib
- grib_to_geo:
    category: {}
    desc: Converts GRIB data into geopoints
    type: icon
    title: Grib To Geopoints
    group:
      - conversion
- grib_vectors:
    category: {}
    desc: Combines GRIB scalar fields into vector data 
    type: icon
    pix: GRIBVECTORS
    group:
      - plot
- gribsetbits:
    category:
      fieldset: Sets GRIB packing bit width
    desc: Sets GRIB packing bit width
    type: script
    group:
      - grib
- grid_cell_area:
    category:
      fieldset: Computes grid cell area for each gridpoints in a field
    desc: Computes grid cell area for each gridpoints in a field
    type: script
    group:
      - geo
- hour:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- hovmoeller_area:
    category: {}
    desc: ''
    type: icon
    exclude: True
- hovmoeller_expand:
    category: {}
    desc: ''
    type: icon
    exclude: True
- hovmoeller_height:
    category: {}
    desc: ''
    type: icon
    exclude: True
- hovmoeller_line:
    category: {}
    desc: ''
    type: icon
    exclude: True
- hovmoellerview:
    category: {}
    desc: Defines a Hovmoeller diagram view
    type: icon
    exclude: True
    group:
      - view
- icon:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- in:
    category:
      list: Test if a value is in a list
    desc: Test if a value is in a list
    type: script
    exclude: True
- indexes:
    category:
      fieldset: Builds an output fieldset containing each gridpoint's indexed position
        in the given vector
    desc: Builds an output fieldset containing each gridpoint's indexed position in
      the given vector
    type: script
    group:
      - grib
- input_visualiser:
    category: {}
    desc: Defines visualisation for array data
    type: icon
    pix: INPUTVISUALISER
    group:
      - plot
- int:
    category:
      fieldset: Integer part
    desc: Integer part
    type: script
    group:
      - grib
- intbits:
    category:
      geopoints: Returns ranges of bits in a geopoints variable
      number: Returns value of a given range of bits in an integer
    desc: Returns ranges of bits
    type: script
    group:
      - maths
- integer:
    category:
      fieldset: Converts float GRIB to int GRIB
    desc: Converts float GRIB to int GRIB
    type: script
    group:
      - grib
- integrate:
    category:
      fieldset: Computes the average weighted by the gridcell area for each field
        in fieldset
    desc: Computes the average weighted by the gridcell area for each field in fieldset
    type: script
    group:
      - stats
- interpolate:
    category:
      fieldset: Interpolates field values to the specified location
    desc: Interpolates field values to the specified location
    type: script
    group:
      - geo
- is_feature_available:
    category:
      info: 'Returns 1 if the given feature is available, otherwise 0. Feature names:
        ''odb'''
    desc: 'Returns 1 if the given feature is available, otherwise 0. Feature names:
      ''odb'''
    type: script
- juldate:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- julday:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- kml_output:
    category: {}
    desc: Defines the KML output format
    type: icon
    standard: False
    mag: True
    group:
      - output
- latitudes:
    category:
      fieldset: Returns the grid point latitudes as a vector (or list of vectors)
      geopoints: Returns a list/vector of latitudes from the given geopoints.
    desc: Returns a list/vector of latitudes from the given geopoints.
    type: script
    group:
      - geo
- length:
    category:
      string: Returns the length of a string.
    desc: Returns the length of a string.
    type: script
    exclude: True
- levels:
    category:
      geopoints: Returns a list/vector of heights from the given geopoints.
    desc: Returns a list/vector of heights from the given geopoints.
    type: script
    group:
      - geopoints
- list:
    category:
      list: Builds a list from its arguments
    desc: Builds a list from its arguments
    type: script
    exclude: True
- log:
    category:
      fieldset: Natural logarithm
    desc: Computes the natural logarithm
    type: script
    group:
      - maths
- log10:
    category:
      fieldset: Base 10 logarithm
    desc: Computes the base 10 logarithm
    type: script
    group:
      - maths
- longitudes:
    category:
      fieldset: Returns the grid point longitudes as a vector (or list of vectors)
      geopoints: Returns a list/vector of longitudes from the given geopoints.
    desc: Returns a list/vector of longitudes from the given geopoints.
    type: script
    group:
      - geo
- lookup:
    category:
      fieldset: Builds an output fieldset using the values in the first as indices
        into the second
    desc: Builds an output fieldset using the values in the first as indices into
      the second
    type: script
    group:
      - grib
- lowercase:
    category:
      string: Sets to unique case of letters
    desc: Sets to unique case of letters
    type: script
    exclude: True
- magml:
    category: {}
    desc: ''
    type: icon
    exclude: True
- mapview:
    category: {}
    desc: ''
    type: icon
    exclude: True
- mask:
    category:
      fieldset: Generates masks for fieldsets
      geopoints: Generates masks for geopoints
    desc: Generates masks for geopoints
    type: script
    group:
      - mask
- maverageview:
    category: {}
    desc: Creates an average view
    type: icon
    title: Average View
    pix: MXAVERAGEVIEW
    group:
      - view
- max:
    category:
      fieldset: Maximum
    desc: Maximum
    type: script
    group:
      - stats
- maxis:
    category: {}
    desc: Defines the axis plotting styles
    type: icon
    title: Axis Plotting
    mag: True
    group:
      - visdef
- maxvalue:
    category:
      fieldset: Maximum value of a variable
    desc: Computes the maximum of all the values in a fieldset
    type: script
    group:
      - stats
- mboxplot:
    category: {}
    desc: ''
    type: icon
    exclude: True
    group:
      - visdef
- mcoast:
    category: {}
    desc: Defines the map plotting style
    type: icon
    title: Coastlines
    mag: True
    group:
      - visdef
- mcont:
    category: {}
    desc: Defines the contouring style
    type: icon
    title: Contouring
    mag: True
    group:
      - visdef
- mcross_sect:
    category: {}
    desc: Generates data for the cross section view
    type: icon
    title: Cross Section Data
    pix: MXSECTION
    group:
      - vertical
- mean:
    category:
      fieldset: Returns the mean of all the fields
      geopoints: Returns the sum or mean of the values in a geopoints variable
      vector: Returns the sum or mean of the values in a vector variable
    desc: Returns the sum or mean of the values in a geopoints variable
    type: script
    group:
      - stats
- mean_ew:
    category:
      fieldset: Generates a fieldset out of East-West means
    desc: Generates a fieldset out of East-West means
    type: script
    group:
      - stats
- menu:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- merge:
    category:
      fieldset: Merge several fieldsets
      geopoints: Merges 2 sets of geopoints
      vector: Appends a number to a vector
    desc: Merges 2 sets of geopoints
    type: script
- met3d:
    category: {}
    desc: Visualises GRIB data in Met3D
    type: icon
    group:
      - plot
      - met3d
- met3d_prepare:
    category: {}
    desc: Retrieves and prepare GRIB data for Met3D
    type: icon
    group:
      - retrieve
      - met3d
- metadata:
    category:
      geopoints: Returns a metadata definition from the given geopoints.
    desc: Returns a metadata definition from the given geopoints.
    type: script
    group:
      - geopoints
- metadata_keys:
    category:
      table: Returns a list of available meta data keys for the given table
    desc: Returns a list of available meta data keys for the given table
    type: script
    group:
      - table
- metadata_value:
    category:
      table: Returns the value of then given meta data key for a table
    desc: Returns the value of then given meta data key for a table
    type: script
    group:
      - table
- meteogram:
    category: {}
    desc: Generates a meteogram
    type: icon
    pix: MET_PLUS
    group:
      - plot
- mgraph:
    category: {}
    desc: Defines the graph plotting style
    type: icon
    title: Graph Plotting
    mag: True
    group:
      - visdef
- mhovmoeller_area:
    category: {}
    desc: Generates data for the Hovmoeller area mode
    title: Hovmoeller Data
    type: icon
    pix: MHOVMOELLERDATA
    family: hovm_data
    group:
      - vertical
- mhovmoeller_expand:
    category: {}
    desc: Generates data for the Hovmoeller expand mode
    title: Hovmoeller Data
    type: icon
    pix: MHOVMOELLERDATA
    family: hovm_data
    group:
      - vertical
- mhovmoeller_line:
    category: {}
    desc: Generates data for the Hovmoeller line mode
    title: Hovmoeller Data
    type: icon
    pix: MHOVMOELLERDATA
    family: hovm_data
    group:
      - vertical
- mhovmoeller_vertical:
    category: {}
    desc: Generates data for the Hovmoeller vertical mode
    title: Hovmoeller Data
    type: icon
    pix: MHOVMOELLERDATA
    family: hovm_data
    group:
      - vertical
- mhovmoellerview:
    category: {}
    desc: Creates a Hovmoeller diagram view
    title: Hovmoeller View
    type: icon
    pix: MHOVMOELLERVIEW
    group:
      - view
- mimport:
    category: {}
    desc: Plots an image at the spcified position in a view 
    type: icon
    group:
      - plot
- min:
    category:
      fieldset: Minimum
    desc: Minimum
    type: script
    group:
      - stats
- minute:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- minvalue:
    category:
      fieldset: Minimum value of a variable
    desc: Minimum value of a variable
    type: script
    group:
      - stats
- mlegend:
    category: {}
    desc: Defines the legend plotting style
    type: icon
    title: Legend
    mag: True
    group:
      - visdef
- mobs:
    category: {}
    desc: Defines the BUFR observation plotting style
    type: icon
    title: Observation Plotting
    mag: True
    group:
      - visdef
- mod:
    category: {}
    desc: Computes the integer remainder of a divison
    type: script
    group:
      - maths
- month:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- msymb:
    category: {}
    desc: Defines the symbol plotting style
    type: icon
    title: Symbol Plotting
    mag: True
    group:
      - visdef
- mtaylor:
    category: {}
    desc: Defines the Taylor diagram style
    type: icon
    title: Taylor Grid
    mag: True
    group:
      - visdef
- mtext:
    category: {}
    desc: Defines the title plotting style
    type: icon
    title: Text Plotting
    mag: True
    group:
      - visdef
- mthermo:
    category: {}
    desc: Defines the thermodynamical data plotting style
    type: icon
    title: Thermo Plotting
    group:
      - visdef
- mthermogrid:
    category: {}
    desc: Defines the thermodynamical diagram style
    type: icon
    title: Thermo Grid
    mag: True
    group:
      - visdef
- mvert_prof:
    category: {}
    desc: Generates data for the vertical profile view
    type: icon
    title: Vertical Profile Data
    pix: MVPROFILE
    group:
      - vertical
- mvertprofview:
    category: {}
    desc: Creates a vertical profile view
    type: icon
    title: Vertical Profile View
    pix: MVPROFILEVIEW
    group:
      - view
- mwind:
    category: {}
    desc: Defines the wind plotting style
    type: icon
    title: Wind Plotting
    mag: True
    group:
      - visdef
- mxs_average:
    category: {}
    desc: Generates data for the average view
    type: icon
    title: Average Data
    pix: MXAVERAGE
    group:
      - vertical
- mxsectview:
    category: {}
    desc: Creates a cross section view
    type: icon
    title: Cross Section View
    pix: MXSECTIONVIEW
    group:
      - view
- name:
    category:
      system: 'Returns the path/name of the macro being executed. args: none'
      table: Returns the name of the given table column.
    desc: Returns the name of the given table column.
    type: script
    group:
      - table
- nearest_gridpoint:
    category:
      fieldset: Returns the nearest grid point value from a field
    desc: Returns the nearest grid point value from a field
    type: script
    group:
      - geo
- nearest_gridpoint_info:
    category:
      fieldset: Returns the nearest grid point value from a field
    desc: Returns the nearest grid point value from a field
    type: script
    group:
      - geo
- netcdf_auto_rescale_values_to_fit_packed_type:
    category:
      netcdf: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    desc: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    type: script
    group:
      - netcdf
- netcdf_auto_scale_values:
    category:
      netcdf: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    desc: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    type: script
    group:
      - netcdf
- netcdf_auto_translate_times:
    category:
      netcdf: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    desc: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    type: script
    group:
      - netcdf
- netcdf_preserve_missing_values:
    category:
      netcdf: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    desc: 'Sets the behaviour of netcdf value handling: 1=on, 0=off'
    type: script
    group:
      - netcdf
- netcdf_visualiser:
    category: {}
    desc: Defines visualisation for NetCDF data
    type: icon
    pix: NETCDFVIS
    group: 
      - plot
- newpage:
    category:
      io: Forces a new page on PostScript output
    desc: Forces a new page on PostScript output
    type: script
    group:
      - plot
- nice:
    category:
      unix: Nice (nice value)
    desc: Nice (nice value)
    type: script
    exclude: nice
- nobitmap:
    category:
      fieldset: Clear bitmap of 1st fieldset assigning value instead
      vector: Converts missing values to numbers in a vector
    desc: Converts missing values to numbers in a vector
    type: script
    group:
      - mask
- now:
    category:
      date: Returns the current date and time
    desc: Returns the current date and time
    type: script
    exclude: True
- number:
    category:
      number: Returns the number represented by the string
    desc: Returns the number represented by the string
    type: script
    exclude: True
- obsfilter:
    category: {}
    desc: Filters BUFR data
    type: icon
    title: Observation Filter
    group:
      - filter
- odb_filter:
    category: {}
    desc: Filters ODB data
    type: icon
    title: ODB Filter
    group:
      - filter
- odb_visualiser:
    category: {}
    desc: Defines visualisation for ODB data
    type: icon
    title: ODB Visualiser
    group:
      - plot
- offset:
    category:
      geopoints: Offsets the locations of geopoints
    desc: Offsets the locations of geopoints
    type: script
    group:
      - geo
- option_menu:
    category: {}
    desc: ''
    type: icon
    group: 
      - widget
- output:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- overlay_control:
    category: {}
    desc: ''
    type: icon
    exclude: True
- parse:
    category:
      string: Splits a string into tokens.
    desc: Splits a string into tokens.
    type: script
    exclude: True
- paxis:
    category: {}
    desc: ''
    type: icon
    exclude: True
- pcoast:
    category: {}
    desc: ''
    type: icon
    exclude: True
- pcont:
    category: {}
    desc: ''
    type: icon
    exclude: True
- pdf_output:
    category: {}
    desc: Defines the PDF output format
    type: icon
    standard: False
    group:
      - output
- percentile:
    category: {}
    desc: Computes a set of percentiles of GRIB data
    type: icon
    group:
      - stats
- percentile:
    category:
      vector: Returns a set of percentiles of a vector
    desc: Returns a set of percentiles of an array
    type: script
    exclude: True
- pgraph:
    category: {}
    desc: ''
    type: icon
    exclude: True
- plot:
    category: {}
    desc: Generates a plot
    type: script
    group:
      - plot   
- plot_page:
    category: {}
    desc: Creates a page in a plot layout
    type: icon
    pix: DISPLAYWINDOW
    group:
      - layout
- plot_subpage:
    category: {}
    desc: Creates a subpage in a plot layout
    type: icon
    pix: DISPLAYWINDOW
    group:
      - layout
- plot_superpage:
    category:
      plot: Returns a super_page for plotting
    desc: Creates a top level plot layout
    type: icon
    title: Display Window
    pix: DISPLAYWINDOW
    group:
      - layout
- png_output:
    category: {}
    desc: Defines the PNG output format
    type: icon
    standard: False
    mag: True
    group:
      - output
- polar_vector:
    category:
      geopoints: Combines two 1-parameter geopoints variables into polar vector style
    desc: Combines two 1-parameter geopoints variables into polar vector style
    type: script
    group:
      - geopoints
- pott_m:
    category: {}
    desc: Computes the potential temperature on model levels
    title: Potential Temperature
    type: icon
    pix: POTTF
    group:
      - thermo
- pott_p:
    category: {}
    desc: Computes the potential temperature on pressure levels
    title: Potential Temperature
    type: icon
    pix: POTTF
    group:
      - thermo
- precision:
    category:
      number: Sets the printing precision for floating point values.
    desc: Sets the printing precision for floating point values.
    type: script
    exclude: True
- pressure:
    category:
      fieldset: Computes the pressure of a model level fieldset
    desc: Computes the pressure on model levels in a fieldset (deprecated)
    type: script
    group:
      - vertical
- print:
    category:
      io: Prints all its arguments
    desc: Prints all its arguments
    type: script
- ps_output:
    category: {}
    desc: Defines the PostScript output format
    type: icon
    standard: False
    mag: True
    group:
      - output
- pscairo_output:
    category: {}
    desc: Defines the PostScript output format using the Cairo driver
    type: icon
    standard: False
    group:
      - output
- psymb:
    category: {}
    desc: ''
    type: icon
    exclude: True
- ptext:
    category: {}
    desc: ''
    type: icon
    exclude: True
- purge_mem:
    category:
      fieldset: Releases unused memory
    desc: Releases unused memory
    type: script
- putenv:
    category:
      unix: Sets the value of an environment variable.
    desc: Sets the value of an environment variable.
    type: script
    exclude: True
- pwind:
    category: {}
    desc: ''
    type: icon
    exclude: True
- read:
    category: {}
    desc: Filters and interpolates GRIB data
    type: icon
    group:
      - filter
      - geo
- read:
    category: {}
    desc: ''
    type: null
- read:
    category:
      io: 'Reads the given file and returns a variable of the appropriate type. args:
        (string)'
    desc: 'Reads the given file and returns a variable of the appropriate type. args:
      (string)'
    type: script
- read_mir:
    category: {}
    desc: ''
    type: icon
    exclude: True
- read_request:
    category:
      fieldset: 'Reads the given request file and returns a list of dictionaries.
        args: (string)'
    desc: 'Reads the given request file and returns a list of dictionaries. args:
      (string)'
    type: script
- read_table:
    category:
      table: Reads a table file with parameters for parsing it.
    desc: Reads a table file with parameters for parsing it.
    type: icon
    title: Table Reader
    pix: TABLEREADER
    group:
      - table
- read_tigge:
    category: {}
    desc: ''
    type: icon
    exclude: True
- regrid:
    category: {}
    desc: Regridding and derivatives
    type: icon
    group:
      - geo  
- relhum:
    category: {}
    desc: Computes relative humidity from specific humidity
    type: icon
    title: Relative Humidity
    group:
      - thermo
- remove_duplicates:
    category:
      geopoints: Removes geopoint duplicates
    desc: Removes geopoint duplicates
    type: script
    group:
      - geopoints
- remove_missing_latlons:
    category:
      geopoints: Copies a set of geopoints, removing missing lat/lons
    desc: Copies a set of geopoints, removing missing lat/lons
    type: script
    group: 
      - mask
- remove_missing_values:
    category:
      geopoints: Copies a set of geopoints, removing missing values
    desc: Copies a set of geopoints, removing missing values
    type: script
    group:
      - mask
- reprojection:
    category: {}
    desc: Repoject satellite view GRIB data onto a latlon grid
    type: icon
    group:
      - geo
- retrieve:
    category: {}
    desc: Retrieves data from MARS
    type: icon
    group:
      - retrieve
- retrieve_mir:
    category: {}
    desc: ''
    type: icon
    exclude: True
- retrieve_odb:
    category: {}
    desc: ''
    type: icon
    exclude: True
- retrieve_tigge:
    category: {}
    desc: ''
    type: icon
    exclude: True
- rmask:
    category:
      fieldset: Generates masks based on a radius around a point for fieldsets
    desc: Generates masks based on a radius around a point for fieldsets
    type: script
    group:
      - mask
- rms:
    category:
      fieldset: Returns the root mean square of all the fields of a variable
    desc: Returns the root mean square of all the fields of a variable
    type: script
    group:
      - stats
- round:
    category:
      number: Rounds spurious decimals in a value.
    desc: Rounds spurious decimals in a value.
    type: script
    exclude: True
- rttov_run:
    category: {}
    desc: Runs the RTTOV model
    type: icon
    group:
      - rttov
- rttov_visualiser:
    category: {}
    desc: Defines visualisation for RTTOV model output
    type: icon
    group:
      - plot
      - rttov
- runmode:
    category:
      system: Returns a string describing the current run mode
    desc: Returns a string describing the current run mode
    type: script
- scm_run:
    category: {}
    desc: Runs the Single Column Model
    type: icon
    group:
      - scm
- scm_visualiser:
    category: {}
    desc: Defines visualisation for SCM output
    type: icon
    pix: SCM_VIS
    group:
      - scm
      - plot
- search:
    category:
      string: Search for a given substring.
    desc: Search for a given substring.
    type: script
    exclude: True
- second:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- second_derivative_x:
    category:
      fieldset: Computes second West-East derivative of fields
    desc: Computes the second West-East derivative of a fieldset
    type: script
    group:
      - calculus
- second_derivative_y:
    category:
      fieldset: Computes second South-North derivative of fields
    desc: Computes the econd South-North derivative of a fieldset
    type: script
    group:
      - calculus
- seqpott_m:
    category: {}
    desc: Computes the saturation equivalent potential temperature on model levels
    title: Potential Temperature
    pix: POTTF
    type: icon
    group:
      - thermo
- seqpott_p:
    category: {}
    desc: Computes the saturation equivalent potential temperature on pressure levels
    title: Potential Temperature
    type: icon
    pix: POTTF
    group:
      - thermo
- set_dates:
    category:
      geopoints: Sets the date column in the geopoints variable.
    desc: Sets the date column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_latitudes:
    category:
      geopoints: Sets the latitude column in the geopoints variable.
    desc: Sets the latitude column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_levels:
    category:
      geopoints: Sets the level column in the geopoints variable.
    desc: Sets the level column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_longitudes:
    category:
      geopoints: Sets the longitude column in the geopoints variable.
    desc: Sets the longitude column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_metadata:
    category:
      geopoints: Sets a geopoints metadata from a definition
    desc: Sets a geopoints metadata from a definition
    type: script
    group:
      - geopoints
- set_stnids:
    category:
      geopoints: Sets the stnid column in the geopoints variable.
    desc: Sets the stnid column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_times:
    category:
      geopoints: Sets the time column in the geopoints variable.
    desc: Sets the time column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_value2s:
    category:
      geopoints: Sets the value2 column in the geopoints variable.
    desc: Sets the value2 column in the geopoints variable.
    type: script
    group:
      - geopoints
- set_values:
    category:
      fieldset: Sets the grid point values from a vector (or list of vectors).
      geopoints: Sets the value column in the geopoints variable.
    desc: Sets the value column in the geopoints variable.
    type: script
    group:
      - grib
      - geopoints
- setcurrent:
    category:
      netcdf: Sets the variable number on which netcdf functions will operate.
    desc: Sets the variable number on which netcdf functions will operate.
    type: script
    group:
      - netcdf
- sgn:
    category:
      fieldset: Signum
    desc: Computes the sign
    type: script
    group:
      - maths
- shell:
    category:
      unix: Execute a shell command
    desc: Execute a shell command
    type: script
    exclude: True
- sin:
    category:
      fieldset: Sine
    desc: Computes the sine
    type: script
    group:
      - maths
- sinlat:
    category:
      fieldset: Generates a field with the sine of the gridpoint latitudes
    desc: Generates a field with the sine of the gridpoint latitudes
    type: script
    group:
      - geo
- sleep:
    category:
      unix: Sleep (number of seconds)
    desc: Sleep (number of seconds)
    type: script
    exclude: True
- slider:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- sort:
    category:
      fieldset: Sorts a fieldset
      list: Sorts a list or indices (sort/sort_indices/sort_and_indices)
      vector: Sorts a vector according to an operator '<' (default) or '>'
    desc: Sorts a vector according to an operator '<' (default) or '>'
    type: script
    group:
      - grib
- sort_and_indices:
    category:
      list: Sorts a list or indices (sort/sort_indices/sort_and_indices)
    desc: Sorts a list or indices (sort/sort_indices/sort_and_indices)
    type: script
    exclude: True
- sort_indices:
    category:
      list: Sorts a list or indices (sort/sort_indices/sort_and_indices)
      vector: Sorts a vector according to an operator '<' (default) or '>'
    desc: Sorts a vector according to an operator '<' (default) or '>'
    type: script
    exclude: True
- spec_contour:
    category: {}
    desc:  
    type: icon
    pix: SPECTRA
    exclude: True
- spec_graph:
    category: {}
    desc:  Defines visualisation for spectrum of GRIB data
    title: Spectra
    type: icon
    pix: SPECTRA
- sqrt:
    category:
      fieldset: Square root
    desc: Computes the square root
    type: script
    group:
      - maths
- stations:
    category: {}
    desc: Specifies a WMO station
    type: icon
- stdev:
    category:
      fieldset: Returns the standard deviation of all the fields of a variable
    desc: Returns the standard deviation of all the fields of a variable
    type: script
    group:
      - stats
- stdev_a:
    category:
      fieldset: Computes the area-weighted standard deviation for each field in a
        fieldset
    desc: Computes the area-weighted standard deviation for each field in a fieldset
    type: script
    group:
      - stats
- stnids:
    category:
      geopoints: Returns a list/vector of station ids from the given geopoints.
    desc: Returns a list/vector of station ids from the given geopoints.
    type: script
    group:
      - geopoints
- stop:
    category:
      system: Prints all its arguments and stop the macro
    desc: Prints all its arguments and stop the macro
    type: script
    exclude: True
- stopwatch_laptime:
    category:
      timing: Provides stopwatch timings
    desc: Provides stopwatch timings
    type: script
    exclude: True
- stopwatch_reset:
    category:
      timing: Provides stopwatch timings
    desc: Provides stopwatch timings
    type: script
    exclude: True
- stopwatch_start:
    category:
      timing: Provides stopwatch timings
    desc: Provides stopwatch timings
    type: script
    exclude: True
- stopwatch_stop:
    category:
      timing: Provides stopwatch timings
    desc: Provides stopwatch timings
    type: script
    exclude: True
- store:
    category:
      system: 'Saves the data in a cache under the given name. args: (string, any)'
    desc: 'Saves the data in a cache under the given name. args: (string, any)'
    type: script
    exclude: store
- streamfn:
    category: {}
    desc: Computes the stream function from a vorticity fieldset
    title: Velocity Potential or Stream Function
    type: icon
    pix: VELSTR
    family: velpot
    group:
      - wind
- subsample:
    category:
      geopoints: Filters from the first geopoints variable points that exist in the
        second
    desc: Filters from the first geopoints variable points that exist in the second
    type: script
    group:
      - geo
      - geopoints
- substring:
    category:
      string: Returns a substring.
    desc: Returns a substring.
    type: script
    exclude: True
- sum:
    category:
      fieldset: Returns a field sum of all the fields of a variable
      geopoints: Returns the sum or mean of the values in a geopoints variable
      vector: Returns the sum or mean of the values in a vector variable
    desc: Returns the sum or mean of the values in a geopoints variable
    type: script
    group:
      - stats
- surrounding_points_indexes:
    category:
      fieldset: Returns the indexes of the four surrounding grid points
    desc: Returns the indexes of the four surrounding grid points
    type: script
    group:
      - geo
- svg_output:
    category: {}
    desc: Defines the SVG output format
    type: icon
    standard: False
    mag: True
    group:
      - output
- table:
    category: {}
    desc: ''
    type: icon
    exclude: True
- table_visualiser:
    category: {}
    desc: Defines visualisation for CSV data
    type: icon
    pix: TABLEVISUALISER
    group:
      - plot
- tan:
    category:
      fieldset: Tangent
    desc: Computes the tangent
    type: script
    group:
      - maths
- tanlat:
    category:
      fieldset: Generates a field with the tangent of the gridpoint latitudes
    desc: Generates a field with the tangent of the gridpoint latitudes
    type: script
    group:
      - geo
- thermo_bufr:
    category: {}
    desc: Generates thermodynamical profile from BUFR
    type: icon
    pix: THERMODATA
    group:
      - thermo
- thermo_grib:
    category: {}
    desc: Generates thermodynamical profile from GRIB
    type: icon
    pix: THERMODATA
    group:
      - thermo
- thermo_odb:
    category: {}
    desc: ''
    type: icon
    exclude: True
- thermoview:
    category: {}
    desc: Creates a thermodynamical diagram view
    type: icon
    title: Thermo View
    group:
      - view
- thickness:
    category:
      fieldset: Creates fields of pressure or thickness (input in lat/lon only).
    desc: Computes the pressure thickness on model levels in a fieldset (deprecated)
    type: script
    group:
      - vertical
- times:
    category:
      geopoints: Returns a list/vector of times from the given geopoints.
    desc: Returns a list/vector of times from the given geopoints.
    type: script
    group:
      - geopoints
- tmpfile:
    category:
      io: Return a unique filename for a temporary file.
    desc: Return a unique filename for a temporary file.
    type: script
    exclude: True
- toggle:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- togrib:
    category: {}
    desc: ''
    type: icon
    exclude: True
- tolist:
    category:
      vector: Converts a vector into a list of numbers
    desc: Converts a vector into a list of numbers
    type: script
    exclude: True
- type:
    category:
      info: Returns the type of an expression
    desc: Returns the type of an expression
    type: script
- ui_float:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- ui_integer:
    category: {}
    desc: ''
    type: icon
    group:
      - widget
- unipressure:
    category:
      fieldset: Creates fields of pressure or thickness (accepts several grid types)
    desc: Computes the pressure on model levels in a fieldset
    type: script
    group:
      - vertical
- unique:
    category:
      list: Returns a list with all the unique items in the input list
      vector: Returns a vector with all the unique items in the input vector
    desc: Returns a vector with all the unique items in the input vector
    type: script
    exclude: True
- unithickness:
    category:
      fieldset: Creates fields of pressure or thickness (accepts several grid types)
    desc: Computes the pressure thickness of model levels in a fieldset
    type: script
    group:
      - vertical
- univertint:
    category:
      fieldset: Universal vertical integration, also for sparse vertical data
    desc: Performs a vertical integration for a fieldset
    type: script
    group:
      - vertical
- uppercase:
    category:
      string: Sets to unique case of letters
    desc: Sets to unique case of letters
    type: script
    exclude: True
- uvwind:
    category: {}
    desc: Computes u/v from a vorticty and divegence fieldset 
    title: Rotational or Divergent Wind
    type: icon
    pix: DIVROT
    family: divrot
    group:
      - wind
- uvwind_mir:
    category: {}
    desc: ''
    type: icon
    exclude: True
- valid_date:
    category:
      fieldset: Returns the valid date(s) of a given fieldset
    desc: Returns the valid date(s) of a given fieldset
    type: script
- value:
    category:
      netcdf: Returns the n:th value from the current netcdf variable.
    desc: Returns the n:th value from the current netcdf variable.
    type: script
    group:
      - netcdf
- value2s:
    category:
      geopoints: Returns a list/vector of 2nd values from the given geopoints.
    desc: Returns a list/vector of 2nd values from the given geopoints.
    type: script
    group:
      - geopoints
- value_columns:
    category:
      geopoints: Returns a list of column names for a geopoints variable
    desc: Returns a list of column names for a geopoints variable
    type: script
    group:
      - netcdf
- values:
    category:
      fieldset: Returns the grid point values as a vector (or list of vectors).
      geopoints: Returns a list/vector of values from the given geopoints.
      netcdf: Returns a list containing all the values for the current netcdf variable.
      odb: Returns a list of values from the given ODB column.
      table: Returns a list of values from the given table column.
    desc: Returns a list of values from the given ODB column.
    type: script
    group:
      - grib
      - geopoints
      - netcdf
      - table
- vapor_prepare:
    category: {}
    desc: Prepares and visualises GRIB data in Vapor
    type: icon
    group:
      - retrieve
      - vapor
- var:
    category:
      fieldset: Returns the variance of all the fields of a variable
    desc: Returns the variance of all the fields of a variable
    type: script
    group:
      - stats
- var_a:
    category:
      fieldset: Computes the area-weighted variance for each field in a fieldset
    desc: Computes the area-weighted variance for each field in a fieldset
    type: script
    group:
      - stats
- variables:
    category:
      netcdf: Returns a list of the names of the given netcdf file's variables.
    desc: Returns a list of the names of the given netcdf file's variables.
    type: script
    group:
      - netcdf
- vector:
    category:
      list: Builds a new vector either with 'n' zero elements or populated from a
        list
    desc: Builds a new vector either with 'n' zero elements or populated from a list
    type: script
    exclude: True
- vector_set_default_type:
    category:
      vector: Sets the default internal storage type for all subsequent vectors
    desc: Sets the default internal storage type for all subsequent vectors
    type: script
    exclude: True
- velpot:
    category: {}
    desc: Computes the velocity potential from a divergence fieldset
    title: Velocity Potential or Stream Function
    type: icon
    pix: VELSTR
    family: velpot
    group:
      - wind
- version_info:
    category:
      info: Returns version information about Metview
    desc: Returns version information about Metview
    type: script
- vert_prof:
    category: {}
    desc: Generates data for the vertical profile view
    type: icon
    exclude: True
    group:
      - vertical
- vertint: 
    category:
      fieldset: Performs vertical integration
    desc: Performs a vertical integration for a fieldset (deprecated)
    type: script
    group:
      - vertical
- vertprofview:
    category: {}
    desc: ''
    type: icon
    exclude: True
    group:
      - view
- waitmode:
    category:
      system: Causes Macro to always wait(1)/not wait(0) for functions to complete
        before continuing.
    desc: Causes Macro to always wait(1)/not wait(0) for functions to complete before
      continuing.
    type: script
- wmsclient:
    category: {}
    desc: Web Map Service (WMS) client
    type: icon
    title: WMS Client
    pix: WMS_CLIENT
    group:
      - retrieve
- write:
    category:
      io: 'Writes/appends the given data to file. args: (filehandler, any)'
    desc: 'Writes/appends the given data to file. args: (filehandler, any)'
    type: script
- xs_average:
    category: {}
    desc: ''
    type: icon
    exclude: True
- xsectview:
    category: {}
    desc: ''
    type: icon
    exclude: True
    group:
      - view
- xy_vector:
    category:
      geopoints: Combines two 1-parameter geopoints variables into u/v vector style
    desc: Combines two 1-parameter geopoints variables into u/v vector style
    type: script
    group:
      - geopoints
- year:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- yymmdd:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- yyyymmdd:
    category:
      date: Extract a date component
    desc: Extract a date component
    type: script
    exclude: True
- dewpoint_from_relative_humidity:
    category:
      fieldset: Computes the dewpoint for a given temperature and relative humidity
    desc: Computes the dewpoint for a given temperature and relative humidity
    type: script
    group:
      - thermo
- dewpoint_from_specific_humidity:
    category:
      fieldset: Computes the dewpoint for a given specific humidity and pressure
    desc: Computes the dewpoint for a given specific humidity and pressure
    type: script
    group:
      - thermo
- divergence:
    category:
      fieldset: Compute horizontal divergence of vector fields
    desc: Computes the horizontal divergence of a vector fieldset
    type: script
    group:
      - calculus
- flexpart_build_title:
    category:
      plot: Generates title for plotting FLEXPART gridded output fields
    desc: Generates title for plotting FLEXPART gridded output fields
    type: script
    group:
      - flex
- flexpart_filter:
    category:
      flexpart: Extract fields from FLEXPART output GRIB files
    desc: Extract fields from FLEXPART output GRIB files
    type: script
    group:
      - flex
- flexpart_total_column:
    category:
      flexpart: Computes the sum/vertical integral of fields in a FLEXPART output
        GRIB file.
    desc: Computes the sum/vertical integral of fields in a FLEXPART output GRIB file.
    type: script
    group:
      - flex
- geostrophic_wind:
    category:
      fieldset: Computes geostrophic wind on pressure levels
    desc: Computes geostrophic wind on pressure levels
    type: script
    group:
      - wind
- integral:
    category:
      fieldset: Computes surface integral for fields
    desc: Computes the surface integral of a fieldset
    type: script
    group:
      - calculus
- laplacian:
    category:
      fieldset: Computes horizontal Laplacian of fields
    desc: Computes the horizontal Laplacian of fieldset
    type: script
    group:
      - calculus
- lifted_condensation_level:
    category:
      thermo: Computes the Lifted Condensation Level (LCL) using the parcel method
    desc: Computes the Lifted Condensation Level (LCL) using the parcel method
    type: script
    group:
      - thermo
- mixing_ratio:
    category:
      thermo: Computes the mixing ratio from specific humidity
    desc: Computes the mixing ratio from specific humidity
    type: script
    group:
      - thermo
- ml_to_hl:
    category:
      fieldset: Interpolates model level fields to height levels
    desc: Interpolates model level fields to height levels
    type: script
    group:
      - vertical
- mvl_geocircle:
    category:
      plot: Returns a curve marking the circle with the given radius around the given
        centre
    desc: Returns a curve for a circle/quadrants defined on the surface of the Earth
    type: script
    group:
      - plot
- mvl_geoline:
    category:
      plot: Returns a line marking a line of interest
    desc: Returns a curve for a line sampled in lat-lon coordinates
    type: script
    group:
      - plot
- mvl_geopolyline:
    category:
      fieldset: Returns a plot object for a polyline sampled in lat-lon coordinates
    desc: Returns a curve with a polyline sampled in lat-lon coordinates
    type: script
    group:
      - plot
- mvl_geopotential_on_ml:
    category:
      fieldset: Computes geopotential on model levels
    desc: Computes the geopotential on model levels
    type: script
    group:
      - vertical
- mvl_ml2hPa:
    category:
      fieldset: Interpolates a fieldset on model levels to pressure levels (in hPa)
    desc: Interpolates a fieldset on model levels to pressure levels (in hPa)
    type: script
    group:
      - vertical
- mvl_regular_layout:
    category:
      plot: Generates a regular grid of frames/subframes
    desc: Generates a regular grid of frames/subframes
    type: script
    group:
      - layout
- mxn_layout:
    category:
      plot: Generates a regular grid of plot pages
    desc: Generates a regular grid of plot pages
    type: script
    group:
      - layout
- potential_temperature:
    category:
      thermo: computes the potential temperature for a given temperature and pressure
    desc: computes the potential temperature for a given temperature and pressure
    type: script
    group:
      - thermo
- relative_humidity_from_dewpoint:
    category:
      thermo: Computes the relative humidity for a given temperature and dewpoint
    desc: Computes the relative humidity for a given temperature and dewpoint
    type: script
    group:
      - thermo
- saturation_mixing_ratio:
    category:
      thermo: Computes the saturation mixing ratio for a given temperature and pressure
    desc: Computes the saturation mixing ratio for a given temperature and pressure
    type: script
    group:
      - thermo
- saturation_vapour_pressure:
    category:
      thermo: Computes the saturation vapour pressure for a given temperature
    desc: Computes the saturation vapour pressure for a given temperature
    type: script
    group:
      - thermo
- temperature_from_potential_temperature:
    category:
      thermo: Computes the temperature from potential tempearture and pressure
    desc: Computes the temperature from potential tempearture and pressure
    type: script
    group:
      - thermo
- thermo_data_info:
    category:
      thermo: extracts information from a thermo data object
    desc: extracts information from a thermo data object
    type: script
    group:
      - thermo
- thermo_data_values:
    category:
      fieldset: extracts data and metadata from a thermo data object
    desc: extracts data and metadata from a thermo data object
    type: script
    group:
      - thermo
- thermo_parcel_area:
    category:
      plot: Returns a set of coloured areas from a thermo parcel path
    desc: returns a set of coloured areas from a thermo parcel path
    type: script
    group:
      - thermo
      - plot
- thermo_parcel_path:
    category:
      thermo: computes the path of an ascending thermodynamic parcel
    desc: Computes the path of an ascending thermodynamic parcel
    type: script
    group:
      - thermo
- vapour_pressure:
    category:
      thermo: Computes the vapour pressure for a given specific humidity and pressure
    desc: Computes the vapour pressure for a given specific humidity and pressure
    type: script
    group:
      - thermo
- vorticity:
    category:
      fieldset: Compute relative vorticity of vector fields
    desc: Computes the relative vorticity of a vector fieldset
    type: script
    group:
      - calculus
- w_from_omega:
    category:
      fieldset: Computes the vertical velocity in m/s from pressure velocity
    desc: Computes the vertical velocity in m/s from pressure velocity
    type: script
    group:
      - vertical
- xs_build_curve:
    category:
      plot: returns a curve for the given cross section data
    desc: Returns a curve for the given cross section data
    type: script
    group:
      - plot
- xs_build_orog:
    category:
      plot: returns an orography area curve for the given cross section data
    desc: Returns an orography area curve for the given cross section data
    type: script
    group:
      - plot
- xy_area:
    category:
      plot: returns an xy area plot object with a given colour
    desc: Returns an xy area plot object with a given colour
    type: script
    group:
      - plot
- xy_curve:
    category:
      plot: returns a curve with a given colour, style and thickness
    desc: Returns a curve with a given colour, style and thickness
    type: script
    group:
      - plot
- xy_from_polar:
    desc: Computes the x and y components from polar components
    type: script
    group:
      - wind